[[source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[packages]
# Core packages
multinet = {path = ".",editable = true}
python-arango = "==4.4.0"
newick = "==0.9.2"
uuid = "==1.30"
requests = "==2.22.0"
webargs = "==5.4.0"
flask = "==1.1.1"
flask-cors = "==3.0.8"
# Dev packages
black = "==19.3b0"
flake8 = "==3.7.8"
flake8-black = "==0.1.0"
flake8-bugbear = "==19.8.0"
flake8-docstrings = "==1.3.1"
flake8-quotes = "==2.1.0"
sphinx = "==2.3.1"
pytest = "==5.1.0"
pytest-cov = "==2.7.1"
pytest-xdist = "==1.29.0"
recommonmark = "==0.5.0"
pre-commit = "==1.18.2"
flake8-mypy = "*"
pep8-naming = "*"
flasgger = "*"
uwsgi = "*"

[requires]
python_version = "3.7"

[pipenv]
allow_prereleases = true

[scripts]
serve = "flask run -p ${FLASK_SERVE_PORT}"
build-docs = "make html -C docs"
serve-docs = "python -m http.server ${DOC_SERVE_PORT} -d docs/_build/html"
test-server-up = "bash ./scripts/server/start.sh"
test-server-down = "bash ./scripts/server/stop.sh"
test-server-clean = "bash ./scripts/server/clean.sh"
lint = "flake8"
test = "pytest -v -W ignore::DeprecationWarning test"
typecheck = "mypy -p multinet --disallow-untyped-defs"
coverage = "pytest -W ignore::DeprecationWarning test --cov=multinet"
format = "black ."
populate = "python scripts/data.py populate"
