---
- hosts: all
  remote_user: ubuntu

  vars:
    ansible_python_interpreter: /usr/bin/python3

  vars_prompt:
    - name: arangodb_root_password
      prompt: "Password for ArangoDB root account"

    - name: arango_readonly_password
      prompt: "Password for ArangoDB readonly user"

    - name: server_name
      prompt: "What server are you deploying to? (db.multinet.app or db-test.multinet.app)"
      private: no

    - name: ssl_email
      prompt: "Certbot SSL email address"
      private: no

  tasks:
    - name: Import and run ssl related tasks
      import_tasks: ssl.yml

    # https://www.arangodb.com/download-major/ubuntu/
    - name: Add arangodb release key
      apt_key:
        url: https://download.arangodb.com/arangodb35/DEBIAN/Release.key
        state: present
      become: true

    - name: Create arangodb list file
      shell: echo 'deb https://download.arangodb.com/arangodb35/DEBIAN/ /' | sudo tee /etc/apt/sources.list.d/arangodb.list
      become: true

    - name: Install arangodb dependency
      apt:
        name: apt-transport-https
        update_cache: true
      become: true

    - name: Install arangodb
      apt:
        name: arangodb3=3.5.2-1
      become: true

    - name: Stop arangodb service
      systemd:
        name: arangodb3
        state: stopped
      become: true

    - name: Overwrite the default arangodb password
      shell: ARANGODB_DEFAULT_ROOT_PASSWORD={{ arangodb_root_password }} arango-secure-installation
      become: true

    - name: Add the SSL filepath to the config (cert file provided by ssl.yml)
      blockinfile:
        path: /etc/arangodb3/arangod.conf
        block: |
          [ssl]
          keyfile = /home/ubuntu/server.pem
      become: true

    - name: Enable arangodb to listen on all interfaces
      lineinfile:
        path: /etc/arangodb3/arangod.conf
        regexp: '^endpoint ='
        line: "endpoint = ssl://0.0.0.0:8529"
      become: true

    - name: Start arangodb service
      systemd:
        name: arangodb3
        state: restarted
      become: true

    - name: Install arangosh script for user provisioning to server
      template:
        src: create-readonly-user.js
        dest: /tmp/create-readonly-user.js
        owner: ubuntu
        mode: 444

    - name: Ensure there is a read-only user
      command: arangosh --server.password {{ arangodb_root_password }} --server.endpoint ssl://127.0.0.1:8529 --javascript.execute /tmp/create-readonly-user.js
      become: true

    - name: Delete user provisioning script
      file:
        path: /tmp/create-readonly-user.js
        state: absent
